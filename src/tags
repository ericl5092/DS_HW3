addCol	db/dbTable.cpp	/^DBTable::addCol(const vector<int>& d)$/
checkColIdx	db/dbCmd.cpp	/^static bool checkColIdx(const string& token, int& /
checkRowIdx	db/dbCmd.cpp	/^static bool checkRowIdx(const string& token, int& /
delCol	db/dbTable.cpp	/^DBTable::delCol(int c)$/
delRow	db/dbTable.cpp	/^DBTable::delRow(int c)$/
exec	db/dbCmd.cpp	/^DBAppendCmd::exec(const string& option)$/
getAve	db/dbTable.cpp	/^DBTable::getAve(size_t c) const$/
getCount	db/dbTable.cpp	/^DBTable::getCount(size_t c) const$/
getMin	db/dbTable.cpp	/^DBTable::getMin(size_t c) const$/
getSum	db/dbTable.cpp	/^DBTable::getSum(size_t c) const$/
getXXX	db/dbTable.cpp	/^\/\/ For the following getXXX() functions...  (exc/
help	db/dbCmd.cpp	/^DBAppendCmd::help() const$/
initDbCmd	db/dbCmd.cpp	/^initDbCmd()$/
printCol	db/dbTable.cpp	/^DBTable::printCol(size_t c) const$/
printSummary	db/dbTable.cpp	/^DBTable::printSummary() const$/
pushOrder	db/dbTable.h	/^   void pushOrder(size_t i) { _sortOrder.push_back/
removeCell	db/dbTable.cpp	/^DBRow::removeCell(size_t c)$/
reset	db/dbTable.cpp	/^DBTable::reset()$/
sort	db/dbTable.cpp	/^DBTable::sort(const struct DBSort& s)$/
usage	db/dbCmd.cpp	/^DBAppendCmd::usage(ostream& os) const$/
CmdClass	cmd/cmdParser.h	/^#define CmdClass(T)                           \\$/
CmdMap	cmd/cmdParser.h	/^typedef map<const string, CmdExec*>   CmdMap;$/
CmdRegPair	cmd/cmdParser.h	/^typedef pair<const string, CmdExec*>  CmdRegPair;$/
closeDofile	cmd/cmdParser.cpp	/^CmdParser::closeDofile()$/
errorOption	cmd/cmdParser.cpp	/^CmdExec::errorOption(CmdOptionError err, const str/
exec	cmd/cmdCommon.cpp	/^HelpCmd::exec(const string& option)$/
execOneCmd	cmd/cmdParser.cpp	/^CmdParser::execOneCmd()$/
help	cmd/cmdCommon.cpp	/^HelpCmd::help() const$/
initCommonCmd	cmd/cmdCommon.cpp	/^initCommonCmd()$/
lexOptions	cmd/cmdParser.cpp	/^(const string& option, vector<string>& tokens, siz/
lexSingleOption	cmd/cmdParser.cpp	/^(const string& option, string& token, bool optiona/
listCmd	cmd/cmdParser.cpp	/^CmdParser::listCmd(const string& str)$/
mybeep	cmd/cmdCharDef.cpp	/^void mybeep()$/
mygetc	cmd/cmdCharDef.cpp	/^static char mygetc(istream& istr)$/
openDofile	cmd/cmdParser.cpp	/^CmdParser::openDofile(const string& dof)$/
printHelps	cmd/cmdParser.cpp	/^CmdParser::printHelps() const$/
printHistory	cmd/cmdParser.cpp	/^CmdParser::printHistory(int nPrint) const$/
regCmd	cmd/cmdParser.cpp	/^CmdParser::regCmd(const string& cmd, unsigned nCmp/
reset_keypress	cmd/cmdCharDef.cpp	/^static void reset_keypress(void)$/
set_keypress	cmd/cmdCharDef.cpp	/^static void set_keypress(void)$/
string	cmd/cmdParser.cpp	/^\/\/ 1. Read the command string (may contain multi/
tab	cmd/cmdCharDef.h	/^   TAB_KEY          = int('\\t'),  \/\/ tab('\\t')/
usage	cmd/cmdCommon.cpp	/^HelpCmd::usage(ostream& os) const$/
isValidVarName	util/myString.cpp	/^isValidVarName(const string& str)$/
myGetChar	util/myGetChar.cpp	/^char myGetChar(istream& istr)$/
myStr2Int	util/myString.cpp	/^myStr2Int(const string& str, int& num)$/
myStrGetTok	util/myString.cpp	/^myStrGetTok(const string& str, string& tok, size_t/
reset_keypress	util/myGetChar.cpp	/^static void reset_keypress(void)$/
set_keypress	util/myGetChar.cpp	/^static void set_keypress(void)$/
strlen	util/myString.cpp	/^\/\/ 1. strlen(s1) must >= n$/
Mmain.cpp	main/main.cpp	/^main(int argc, char** argv)$/
myexit	main/main.cpp	/^myexit()$/
usage	main/main.cpp	/^usage()$/
Mtest.cpp	test/test.cpp	/^main(int argc, char** argv)$/
